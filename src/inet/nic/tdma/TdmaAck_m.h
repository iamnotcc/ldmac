//
// Generated file, do not edit! Created by nedtool 5.0 from inet/nic/tdma/TdmaAck.msg.
//

#ifndef __INET_TDMAACK_M_H
#define __INET_TDMAACK_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace inet {

/**
 * Class generated from <tt>inet/nic/tdma/TdmaAck.msg:18</tt> by nedtool.
 * <pre>
 * packet TdmaAck
 * {
 *     int nIndex;
 *     int nSlotNum;
 * }
 * </pre>
 */
class TdmaAck : public ::omnetpp::cPacket
{
  protected:
    int nIndex;
    int nSlotNum;

  private:
    void copy(const TdmaAck& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const TdmaAck&);

  public:
    TdmaAck(const char *name=nullptr, int kind=0);
    TdmaAck(const TdmaAck& other);
    virtual ~TdmaAck();
    TdmaAck& operator=(const TdmaAck& other);
    virtual TdmaAck *dup() const {return new TdmaAck(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual int getNIndex() const;
    virtual void setNIndex(int nIndex);
    virtual int getNSlotNum() const;
    virtual void setNSlotNum(int nSlotNum);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const TdmaAck& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, TdmaAck& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef __INET_TDMAACK_M_H

