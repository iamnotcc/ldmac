//
// Generated file, do not edit! Created by nedtool 5.0 from inet/linklayer/tdma/HostReqPkOfTDMA.msg.
//

#ifndef __INET_HOSTREQPKOFTDMA_M_H
#define __INET_HOSTREQPKOFTDMA_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// cplusplus {{
   #include "inet/common/geometry/common/Coord.h"
// }}


namespace inet {

/**
 * Class generated from <tt>inet/linklayer/tdma/HostReqPkOfTDMA.msg:23</tt> by nedtool.
 * <pre>
 * packet HostReqPkOfTDMA
 * {
 *     int nHostId;
 *     string strHostPath;
 *     Coord cdHostPosition;
 * }
 * </pre>
 */
class HostReqPkOfTDMA : public ::omnetpp::cPacket
{
  protected:
    int nHostId;
    ::omnetpp::opp_string strHostPath;
    Coord cdHostPosition;

  private:
    void copy(const HostReqPkOfTDMA& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const HostReqPkOfTDMA&);

  public:
    HostReqPkOfTDMA(const char *name=nullptr, int kind=0);
    HostReqPkOfTDMA(const HostReqPkOfTDMA& other);
    virtual ~HostReqPkOfTDMA();
    HostReqPkOfTDMA& operator=(const HostReqPkOfTDMA& other);
    virtual HostReqPkOfTDMA *dup() const {return new HostReqPkOfTDMA(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual int getNHostId() const;
    virtual void setNHostId(int nHostId);
    virtual const char * getStrHostPath() const;
    virtual void setStrHostPath(const char * strHostPath);
    virtual Coord& getCdHostPosition();
    virtual const Coord& getCdHostPosition() const {return const_cast<HostReqPkOfTDMA*>(this)->getCdHostPosition();}
    virtual void setCdHostPosition(const Coord& cdHostPosition);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const HostReqPkOfTDMA& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, HostReqPkOfTDMA& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef __INET_HOSTREQPKOFTDMA_M_H

